version: 2
jobs:
  go_lint:
    working_directory: ~/project
    docker:
      - image: circleci/golang
      - image: minio/minio
        environment:
          MINIO_ACCESS_KEY: access-key
          MINIO_SECRET_KEY: secret-key-thing
          MINIO_BROWSER: "off"
          MINIO_DOMAIN: s3.local
          MINIO_HTTP_TRACE: /tmp/minio.log
        command:
          - server
          - data
    steps:
      - run:
          name: Install packages
          command: |
            sudo apt-get update -y
            sudo apt-get install lsb-release
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
            sudo apt-get update -y
            sudo apt-get install -y git build-essential
            sudo apt-get install -y google-cloud-sdk
            sudo apt-get install -y shellcheck
      - run:
          name: Install go tools
          command: |
            go get gotest.tools/gotestsum
            go get github.com/matryer/moq
            go get github.com/golangci/golangci-lint/cmd/golangci-lint
            mkdir -p /tmp/test-results
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
           - pkg-cache-{{ checksum "go.sum" }}
           - pkg-cache-
      - run:
          name: Run golang linter
          command: |
            hack/go-generate.sh
            golangci-lint run --verbose --new-from-rev v1
      - run:
          name: Lint shell scripts
          command: |
            shellcheck hack/fuse-demo/wrap_application.sh
            shellcheck deploy/datamon.sh
      - run:
          name: Ensure metrics
          command: |
            go build -o datamon.metrics ./cmd/metrics
  go_build:
    working_directory: ~/project
    docker:
      - image: circleci/golang
      - image: minio/minio
        environment:
          MINIO_ACCESS_KEY: access-key
          MINIO_SECRET_KEY: secret-key-thing
          MINIO_BROWSER: "off"
          MINIO_DOMAIN: s3.local
          MINIO_HTTP_TRACE: /tmp/minio.log
        command:
          - server
          - data
    steps:
      - run:
          name: Install packages
          command: |
            sudo apt-get update -y
            sudo apt-get install lsb-release
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
            sudo apt-get update -y
            sudo apt-get install -y git build-essential
            sudo apt-get install -y google-cloud-sdk
      - run:
          name: Install go tools
          command: |
            go get -u gotest.tools/gotestsum
            go get -u github.com/matryer/moq
            mkdir -p /tmp/test-results
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
            - pkg-cache-{{ checksum "go.sum" }}
            - pkg-cache-
      - run:
          name: Run golang tests
          command: |
            mkdir -p ~/extra
            echo $GCLOUD_SERVICE_KEY > ~/extra/appcredentials.json
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            export GOOGLE_APPLICATION_CREDENTIALS=$HOME/extra/appcredentials.json
            hack/go-generate.sh
            gotestsum --junitfile /tmp/test-results/go-test-report.xml ./... -- -race ./...
      - save_cache:
          key: pkg-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg"
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  build_and_test:
    jobs:
      - go_lint:
         context: "OC Common"
      - go_build:
          context: "OC Common"
